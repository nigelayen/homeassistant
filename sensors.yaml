# Host
- platform: systemmonitor
  resources:
    - type: processor_use
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: swap_use_percent
    - type: last_boot

# next collection
- platform: waste_collection_schedule
  name: next_collection
  details_format: upcoming
  value_template: '{{value.types|join(" + ")}}'
  types:
    - Garbage
    - GreenBin
    - Recycling
    - YardWaste
    - ChristmasTree
- platform: waste_collection_schedule
  name: MyButtonCardSensor
  value_template: '{{value.types|join(" + ")}}|{{value.daysTo}}|{{value.date.strftime("%d.%m.%Y")}}|{{value.date.strftime("%a")}}'
- platform: waste_collection_schedule
  name: next_greenbin_collection
  value_template: "{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}in {{value.daysTo}} days{% endif %}"
  types:
    - GreenBin
- platform: waste_collection_schedule
  name: next_bluebin_collection
  value_template: "{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}in {{value.daysTo}} days{% endif %}"
  types:
    - Recycling
- platform: waste_collection_schedule
  name: next_garbage_collection
  value_template: "{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}in {{value.daysTo}} days{% endif %}"
  types:
    - Garbage
- platform: waste_collection_schedule
  name: next_yardwaste_collection
  value_template: "{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}in {{value.daysTo}} days{% endif %}"
  types:
    - YardWaste
- platform: waste_collection_schedule
  name: next_xmas_collection
  value_template: "{% if value.daysTo == 0 %}Today{% elif value.daysTo == 1 %}Tomorrow{% else %}in {{value.daysTo}} days{% endif %}"
  types:
    - ChristmasTree

- platform: template
  sensors:
    # Round up forecast temperature
    front_door_sensor_battery_level:
      friendly_name: "Front Door Sensor Battery Level"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('binary_sensor.front_door', 'battery_level') }}"
    back_door_sensor_battery_level:
      friendly_name: "Back Door Sensor Battery Level"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('binary_sensor.back_door', 'battery_level') }}"
    motion_sensor_battery_level:
      friendly_name: "Motion Sensor Battery Level"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('binary_sensor.hue_motion_sensor_1_motion', 'battery_level') }}"
    ring_range_extender_battery_level:
      friendly_name: "Ring Range Extender Battery Level"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('sensor.living_room_info_2', 'batteryLevel') }}"
    ring_range_extender_comm_status:
      friendly_name: "Ring Range Extender Communication Status"
      value_template: "{{ state_attr('sensor.living_room_info_2', 'commStatus') }}"
    indoor_temperature:
      friendly_name: "Indoor Temperature"
      value_template: "{{ ((int(state_attr('climate.main_floor', 'current_temperature')) + int(states('sensor.motion_sensor_temperature')))/2)|round(0) }}"
    hydro_ontario_cost:
      unit_of_measurement: "CAD/kWh"
      value_template: >-
        {## https://www.torontohydro.com/for-home/rates ##}
        {% set prices = {
          "off_peak": 0.074,
          "mid_peak": 0.102,
          "on_peak": 0.151,
          "delivery": 0.07,
        } %}

        {% if is_state('binary_sensor.workday_sensor', 'off') %}
          {{ prices.off_peak + prices.delivery }}
        {% else %}
        {% if now().month <= 4 or now().month >= 11 %}
        {% if now().hour >= 7 and now().hour < 11 %}
          {{ prices.on_peak + prices.delivery }}
        {% elif now().hour >= 11 and now().hour < 17 %}
          {{ prices.mid_peak + prices.delivery }}
        {% elif now().hour >= 17 and now().hour < 19 %}
          {{ prices.on_peak + prices.delivery }}
        {% else %}
          {{ prices.off_peak + prices.delivery }}
        {% endif %}
        {% else %}
        {% if now().hour >= 7 and now().hour < 11 %} 
         {{ prices.mid_peak + prices.delivery }} 
        {% elif now().hour >= 11 and now().hour < 17 %}
          {{ prices.on_peak + prices.delivery }}
        {% elif now().hour >= 17 and now().hour < 19 %}
          {{ prices.mid_peak + prices.delivery }}
        {% else %}
          {{ prices.off_peak + prices.delivery }}
        {% endif %}
        {% endif %}
        {% endif %}

    # Feels-like temperature sensor template
    feels_like_temperature:
      friendly_name: "Feels Like Outside"
      value_template: >
        {% set temperature = state_attr('weather.home', 'temperature') | round(0) %}
        {% set humidity = state_attr('weather.home', 'humidity') | round(0) %}
        {% set windspeedmps = states('sensor.toronto_wind_speed')|float / 3.6 %}
        {% set wvp = (humidity/100) * 6.105 * e**((17.27*temperature) / (237.7 + temperature))%}
        {{(temperature + 0.33 * wvp - 0.70 * windspeedmps - 4.00)|round(0)}}
      unit_of_measurement: "Â°C"
